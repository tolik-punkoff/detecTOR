//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DetecTOR.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DetecTOR.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to addfont; Arial;9;Bold;Group;
        ///addfont; Microsoft Sans Serif;8;Regular;Names;
        ///addfont; Arial;14;Bold;Slogan;
        ///
        ///scene;20;
        ///addstring;DetecTOR;Group;
        ///addstring;v 0.2.0;Group;
        ///addstring;Распространяется бесплатно;Names;
        ///addstring;                      ;Names;
        ///addstring;Developers;Group;
        ///addstring;[Wildsoft], [Chaos Software];Group;
        ///addstring;                      ;Names;
        ///addstring;Idea by;Group;
        ///addstring;D. Larin;Names;
        ///addstring;Code by;Group;
        ///addstring;D. Larin;Names;
        ///addstring;PunkArr[];Names;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string aboutdetector {
            get {
                return ResourceManager.GetString("aboutdetector", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap connecting {
            get {
                object obj = ResourceManager.GetObject("connecting", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap edit {
            get {
                object obj = ResourceManager.GetObject("edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap minus {
            get {
                object obj = ResourceManager.GetObject("minus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap plus {
            get {
                object obj = ResourceManager.GetObject("plus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap question1 {
            get {
                object obj = ResourceManager.GetObject("question1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DetecTOR.
        ///
        ///Данная маленькая утилитка позволяет понять, относится ли определенный
        ///IP-адрес к адресам анонимного сервиса TOR. 
        ///Например, это может быть адрес из комментариев вашего Живого Журнала. 
        ///Или откуда-нибудь еще.
        ///
        ///Как пользоваться.
        ///
        ///Запускаете, нажимаете кнопочку &quot;Обновить данные&quot;, 
        ///или ставите птичку в настройках, чтоб программка обновляла 
        ///данные при старте, а потом вводите (или просто вставляете) 
        ///интересующий IP. 
        ///Если он есть в базе IP-адресов сети TOR, 
        ///то программа выведет его и п [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string readme {
            get {
                return ResourceManager.GetString("readme", resourceCulture);
            }
        }
    }
}
